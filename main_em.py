# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import numpy as np

from EM import em
from metrics import silhouette_index, db_index
from points import Point, decompose_x_y

def main1():
    n_clusters = 3
    n_points = 60
    eps = 0.01
    max_iter = 100

    medias = [[0, 0],[5, 5],[-5, 5]]
    covariances = [[[1, 0], [0, 1]],[[1, 0.5], [0.5, 1]],[[1, -0.5], [-0.5, 1]]]
    
    data = []
    for i in range(n_clusters):
         array_points = np.random.multivariate_normal(medias[i], covariances[i], n_points)  # Points generated by normal distributions.
         for coord in array_points:
             data.append(Point(*tuple(coord)))

    initial_covariances = [np.eye(2) for _ in range(3)]
    list_clusters = em(data, n_clusters, initial_covariances, eps, max_iter)
    silhouette = silhouette_index(list_clusters)
    print(f"The Silhouette index is: {silhouette} ")
    
    db = db_index(list_clusters)
    print(f"The Davies-Bouldin index is: {db} ")

    (x1,y1) = decompose_x_y(list_clusters[0])
    (x2,y2) = decompose_x_y(list_clusters[1])
    (x3,y3) = decompose_x_y(list_clusters[2]) 
    plt.plot(x1,y1,'o',markerfacecolor = 'red') 
    plt.plot(x2,y2,'o',markerfacecolor = 'blue') 
    plt.plot(x3,y3,'o',markerfacecolor = 'green')

    plt.xlabel("X")
    plt.ylabel("Y")
    plt.title("Clusters Gaussian Mixture")
    plt.legend()
    plt.savefig("em_clusters.svg")
    plt.savefig("em_clusters.pdf")
    plt.show()
    

main1()
 
    
    
    
    
    
    